Question  - Implement a trie with insert, search, and startsWith methods.
Example:
Trie trie = new Trie();

trie.insert("apple");
trie.search("apple");   // returns true
trie.search("app");     // returns false
trie.startsWith("app"); // returns true
trie.insert("app");   
trie.search("app");     // returns true
Note:
•	You may assume that all inputs are consist of lowercase letters a-z.
•	All inputs are guaranteed to be non-empty strings.

Solution – 
class Trie:

   
    def __init__(self):
        self.set1 = set()
        self.set2 = set()
        """
        Initialize your data structure here.
        """


    def insert(self, word: str) -> None:
        self.set1.add(word)
        for i in range(len(word)):
            self.set2.add(word[:i+1])
        """
        Inserts a word into the trie.
        """


    def search(self, word: str) -> bool:
        if word in self.set1:
            return True
        else:
            return False
        """
        Returns if the word is in the trie.
        """


    def startsWith(self, prefix: str) -> bool:
        if prefix in self.set2:
            return True
        else:
            return False
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)
