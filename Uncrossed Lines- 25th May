Question We write the integers of A and B (in the order they are given) on two separate horizontal lines.
Now, we may draw connecting lines: a straight line connecting two numbers A[i] and B[j] such that:
•	A[i] == B[j];
•	The line we draw does not intersect any other connecting (non-horizontal) line.
Note that a connecting lines cannot intersect even at the endpoints: each number can only belong to one connecting line.
Return the maximum number of connecting lines we can draw in this way.

Solution – typical LCS problem
def maxUncrossedLines(self, A: List[int], B: List[int]) -> int:
        
        lcs = [[0 for x in range(len(B)+1)] for y in range(len(A)+1)]
        
        for i in range(1,len(A)+1):
            for j in range(1,len(B)+1):
                if B[j-1] == A[i-1]:
                    lcs[i][j] = lcs[i-1][j-1] + 1
                else:
                    lcs[i][j] = max(lcs[i][j-1],lcs[i-1][j])
        return lcs[-1][-1]
