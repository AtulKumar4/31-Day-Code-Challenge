Question Given two lists of closed intervals, each list of intervals is pairwise disjoint and in sorted order.
Return the intersection of these two interval lists.
(Formally, a closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.  The intersection of two closed intervals is a set of real numbers that is either empty, or can be represented as a closed interval.  For example, the intersection of [1, 3] and [2, 4] is [2, 3].)

Solution â€“ 
def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:
        
        intervals = []
        i= 0
        j= 0
        while i < len(A) and j < len(B):
            maxStart = max(A[i][0],B[j][0])
            minEnd = min(A[i][1],B[j][1])
            if maxStart <= minEnd:
                intervals.append([maxStart,minEnd])
            if minEnd == A[i][1]:
                i += 1
            if minEnd == B[j][1]:
                j += 1
        return intervals
